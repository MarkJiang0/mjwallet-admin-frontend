{
  "openapi": "3.0.1",
  "info": {
    "contact": {},
    "description": "A lightweight, flexible, elegant and full-featured RBAC scaffolding based on GIN + GORM 2.0 + Casbin 2.0 + Wire DI.",
    "title": "ginadmin",
    "version": "v10.0.0"
  },
  "servers": [
    {
      "url": "/"
    }
  ],
  "paths": {
    "/api/v1/captcha/id": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/_api_v1_captcha_id_get_200_response"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Get captcha ID",
        "tags": ["LoginAPI"]
      }
    },
    "/api/v1/captcha/image": {
      "get": {
        "parameters": [
          {
            "description": "Captcha ID",
            "in": "query",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Reload captcha image (reload=1)",
            "in": "query",
            "name": "reload",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {},
            "description": "Captcha image"
          },
          "404": {
            "content": {
              "image/png": {
                "schema": {
                  "$ref": "#/components/schemas/util.ResponseResult"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "Response captcha image",
        "tags": ["LoginAPI"]
      }
    },
    "/api/v1/current/logout": {
      "post": {
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/util.ResponseResult"
                }
              }
            },
            "description": "OK"
          },
          "500": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/util.ResponseResult"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Logout system",
        "tags": ["LoginAPI"]
      }
    },
    "/api/v1/current/menus": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/_api_v1_current_menus_get_200_response"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/util.ResponseResult"
                }
              }
            },
            "description": "Unauthorized"
          },
          "500": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/util.ResponseResult"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Query current user menus based on the current user role",
        "tags": ["LoginAPI"]
      }
    },
    "/api/v1/current/password": {
      "put": {
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/schema.UpdateLoginPassword"
              }
            }
          },
          "description": "Request body",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/util.ResponseResult"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/util.ResponseResult"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/util.ResponseResult"
                }
              }
            },
            "description": "Unauthorized"
          },
          "500": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/util.ResponseResult"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Change current user password",
        "tags": ["LoginAPI"],
        "x-codegen-request-body-name": "body"
      }
    },
    "/api/v1/current/refresh-token": {
      "post": {
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/_api_v1_current_refresh_token_post_200_response"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/util.ResponseResult"
                }
              }
            },
            "description": "Unauthorized"
          },
          "500": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/util.ResponseResult"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Refresh current access token",
        "tags": ["LoginAPI"]
      }
    },
    "/api/v1/current/user": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/_api_v1_current_user_get_200_response"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/util.ResponseResult"
                }
              }
            },
            "description": "Unauthorized"
          },
          "500": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/util.ResponseResult"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Get current user info",
        "tags": ["LoginAPI"]
      },
      "put": {
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/schema.UpdateCurrentUser"
              }
            }
          },
          "description": "Request body",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/util.ResponseResult"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/util.ResponseResult"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/util.ResponseResult"
                }
              }
            },
            "description": "Unauthorized"
          },
          "500": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/util.ResponseResult"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Update current user info",
        "tags": ["LoginAPI"],
        "x-codegen-request-body-name": "body"
      }
    },
    "/api/v1/loggers": {
      "get": {
        "parameters": [
          {
            "description": "pagination index",
            "in": "query",
            "name": "current",
            "required": true,
            "schema": {
              "default": 1,
              "type": "integer"
            }
          },
          {
            "description": "pagination size",
            "in": "query",
            "name": "pageSize",
            "required": true,
            "schema": {
              "default": 10,
              "type": "integer"
            }
          },
          {
            "description": "log level",
            "in": "query",
            "name": "level",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "trace ID",
            "in": "query",
            "name": "traceID",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "user ID",
            "in": "query",
            "name": "userID",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "log tag",
            "in": "query",
            "name": "tag",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "log message",
            "in": "query",
            "name": "message",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "start time",
            "in": "query",
            "name": "startTime",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "end time",
            "in": "query",
            "name": "endTime",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/_api_v1_loggers_get_200_response"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/util.ResponseResult"
                }
              }
            },
            "description": "Unauthorized"
          },
          "500": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/util.ResponseResult"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Query logger list",
        "tags": ["LoggerAPI"]
      }
    },
    "/api/v1/login": {
      "post": {
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/schema.LoginForm"
              }
            }
          },
          "description": "Request body",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/_api_v1_current_refresh_token_post_200_response"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/util.ResponseResult"
                }
              }
            },
            "description": "Bad Request"
          },
          "500": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/util.ResponseResult"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Login system with username and password",
        "tags": ["LoginAPI"],
        "x-codegen-request-body-name": "body"
      }
    },
    "/api/v1/menus": {
      "get": {
        "parameters": [
          {
            "description": "Code path of menu (like xxx.xxx.xxx)",
            "in": "query",
            "name": "code",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of menu",
            "in": "query",
            "name": "name",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Whether to include menu resources",
            "in": "query",
            "name": "includeResources",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/_api_v1_current_menus_get_200_response"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/util.ResponseResult"
                }
              }
            },
            "description": "Unauthorized"
          },
          "500": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/util.ResponseResult"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Query menu tree data",
        "tags": ["MenuAPI"]
      },
      "post": {
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/schema.MenuForm"
              }
            }
          },
          "description": "Request body",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/_api_v1_menus_post_200_response"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/util.ResponseResult"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/util.ResponseResult"
                }
              }
            },
            "description": "Unauthorized"
          },
          "500": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/util.ResponseResult"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Create menu record",
        "tags": ["MenuAPI"],
        "x-codegen-request-body-name": "body"
      }
    },
    "/api/v1/menus/{id}": {
      "delete": {
        "parameters": [
          {
            "description": "unique id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/util.ResponseResult"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/util.ResponseResult"
                }
              }
            },
            "description": "Unauthorized"
          },
          "500": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/util.ResponseResult"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Delete menu record by ID",
        "tags": ["MenuAPI"]
      },
      "get": {
        "parameters": [
          {
            "description": "unique id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/_api_v1_menus_post_200_response"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/util.ResponseResult"
                }
              }
            },
            "description": "Unauthorized"
          },
          "500": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/util.ResponseResult"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Get menu record by ID",
        "tags": ["MenuAPI"]
      },
      "put": {
        "parameters": [
          {
            "description": "unique id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/schema.MenuForm"
              }
            }
          },
          "description": "Request body",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/util.ResponseResult"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/util.ResponseResult"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/util.ResponseResult"
                }
              }
            },
            "description": "Unauthorized"
          },
          "500": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/util.ResponseResult"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Update menu record by ID",
        "tags": ["MenuAPI"],
        "x-codegen-request-body-name": "body"
      }
    },
    "/api/v1/roles": {
      "get": {
        "parameters": [
          {
            "description": "pagination index",
            "in": "query",
            "name": "current",
            "required": true,
            "schema": {
              "default": 1,
              "type": "integer"
            }
          },
          {
            "description": "pagination size",
            "in": "query",
            "name": "pageSize",
            "required": true,
            "schema": {
              "default": 10,
              "type": "integer"
            }
          },
          {
            "description": "Display name of role",
            "in": "query",
            "name": "name",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Status of role (disabled, enabled)",
            "in": "query",
            "name": "status",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/_api_v1_roles_get_200_response"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/util.ResponseResult"
                }
              }
            },
            "description": "Unauthorized"
          },
          "500": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/util.ResponseResult"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Query role list",
        "tags": ["RoleAPI"]
      },
      "post": {
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/schema.RoleForm"
              }
            }
          },
          "description": "Request body",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/_api_v1_roles_post_200_response"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/util.ResponseResult"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/util.ResponseResult"
                }
              }
            },
            "description": "Unauthorized"
          },
          "500": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/util.ResponseResult"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Create role record",
        "tags": ["RoleAPI"],
        "x-codegen-request-body-name": "body"
      }
    },
    "/api/v1/roles/{id}": {
      "delete": {
        "parameters": [
          {
            "description": "unique id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/util.ResponseResult"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/util.ResponseResult"
                }
              }
            },
            "description": "Unauthorized"
          },
          "500": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/util.ResponseResult"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Delete role record by ID",
        "tags": ["RoleAPI"]
      },
      "get": {
        "parameters": [
          {
            "description": "unique id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/_api_v1_roles_post_200_response"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/util.ResponseResult"
                }
              }
            },
            "description": "Unauthorized"
          },
          "500": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/util.ResponseResult"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Get role record by ID",
        "tags": ["RoleAPI"]
      },
      "put": {
        "parameters": [
          {
            "description": "unique id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/schema.RoleForm"
              }
            }
          },
          "description": "Request body",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/util.ResponseResult"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/util.ResponseResult"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/util.ResponseResult"
                }
              }
            },
            "description": "Unauthorized"
          },
          "500": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/util.ResponseResult"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Update role record by ID",
        "tags": ["RoleAPI"],
        "x-codegen-request-body-name": "body"
      }
    },
    "/api/v1/users": {
      "get": {
        "parameters": [
          {
            "description": "pagination index",
            "in": "query",
            "name": "current",
            "required": true,
            "schema": {
              "default": 1,
              "type": "integer"
            }
          },
          {
            "description": "pagination size",
            "in": "query",
            "name": "pageSize",
            "required": true,
            "schema": {
              "default": 10,
              "type": "integer"
            }
          },
          {
            "description": "Username for login",
            "in": "query",
            "name": "username",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of user",
            "in": "query",
            "name": "name",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Status of user (activated, freezed)",
            "in": "query",
            "name": "status",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/_api_v1_users_get_200_response"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/util.ResponseResult"
                }
              }
            },
            "description": "Unauthorized"
          },
          "500": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/util.ResponseResult"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Query user list",
        "tags": ["UserAPI"]
      },
      "post": {
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/schema.UserForm"
              }
            }
          },
          "description": "Request body",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/_api_v1_current_user_get_200_response"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/util.ResponseResult"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/util.ResponseResult"
                }
              }
            },
            "description": "Unauthorized"
          },
          "500": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/util.ResponseResult"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Create user record",
        "tags": ["UserAPI"],
        "x-codegen-request-body-name": "body"
      }
    },
    "/api/v1/users/{id}": {
      "delete": {
        "parameters": [
          {
            "description": "unique id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/util.ResponseResult"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/util.ResponseResult"
                }
              }
            },
            "description": "Unauthorized"
          },
          "500": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/util.ResponseResult"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Delete user record by ID",
        "tags": ["UserAPI"]
      },
      "get": {
        "parameters": [
          {
            "description": "unique id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/_api_v1_current_user_get_200_response"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/util.ResponseResult"
                }
              }
            },
            "description": "Unauthorized"
          },
          "500": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/util.ResponseResult"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Get user record by ID",
        "tags": ["UserAPI"]
      },
      "put": {
        "parameters": [
          {
            "description": "unique id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/schema.UserForm"
              }
            }
          },
          "description": "Request body",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/util.ResponseResult"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/util.ResponseResult"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/util.ResponseResult"
                }
              }
            },
            "description": "Unauthorized"
          },
          "500": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/util.ResponseResult"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Update user record by ID",
        "tags": ["UserAPI"],
        "x-codegen-request-body-name": "body"
      }
    },
    "/api/v1/users/{id}/reset-pwd": {
      "patch": {
        "parameters": [
          {
            "description": "unique id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/util.ResponseResult"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/util.ResponseResult"
                }
              }
            },
            "description": "Unauthorized"
          },
          "500": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/util.ResponseResult"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Reset user password by ID",
        "tags": ["UserAPI"]
      }
    }
  },
  "components": {
    "schemas": {
      "errors.Error": {
        "properties": {
          "code": {
            "type": "integer"
          },
          "detail": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "schema.Captcha": {
        "properties": {
          "captcha_id": {
            "description": "Captcha ID",
            "type": "string"
          }
        },
        "type": "object"
      },
      "schema.Logger": {
        "properties": {
          "created_at": {
            "description": "Create time",
            "type": "string"
          },
          "data": {
            "description": "Log data",
            "type": "string"
          },
          "id": {
            "description": "Unique ID",
            "type": "string"
          },
          "level": {
            "description": "Log level",
            "type": "string"
          },
          "message": {
            "description": "Log message",
            "type": "string"
          },
          "stack": {
            "description": "Error stack",
            "type": "string"
          },
          "tag": {
            "description": "Log tag",
            "type": "string"
          },
          "trace_id": {
            "description": "Trace ID",
            "type": "string"
          },
          "user_id": {
            "description": "User ID",
            "type": "string"
          },
          "user_name": {
            "description": "From User.Name",
            "type": "string"
          }
        },
        "type": "object"
      },
      "schema.LoginForm": {
        "properties": {
          "captcha_code": {
            "description": "Captcha verify code",
            "type": "string"
          },
          "captcha_id": {
            "description": "Captcha verify id",
            "type": "string"
          },
          "password": {
            "description": "Login password (md5 hash)",
            "type": "string"
          },
          "username": {
            "description": "Login name",
            "type": "string"
          }
        },
        "required": ["captcha_code", "captcha_id", "password", "username"],
        "type": "object"
      },
      "schema.LoginToken": {
        "properties": {
          "access_token": {
            "description": "Access token (JWT)",
            "type": "string"
          },
          "expires_at": {
            "description": "Expired time (Unit: second)",
            "type": "integer"
          },
          "token_type": {
            "description": "Token type (Usage: Authorization=${token_type} ${access_token})",
            "type": "string"
          }
        },
        "type": "object"
      },
      "schema.Menu": {
        "properties": {
          "children": {
            "description": "Child menus",
            "items": {
              "$ref": "#/components/schemas/schema.Menu"
            },
            "type": "array"
          },
          "code": {
            "description": "Code of menu (unique for each level)",
            "type": "string"
          },
          "created_at": {
            "description": "Create time",
            "type": "string"
          },
          "description": {
            "description": "Details about menu",
            "type": "string"
          },
          "id": {
            "description": "Unique ID",
            "type": "string"
          },
          "name": {
            "description": "Display name of menu",
            "type": "string"
          },
          "parent_id": {
            "description": "Parent ID (From Menu.ID)",
            "type": "string"
          },
          "parent_path": {
            "description": "Parent path (split by .)",
            "type": "string"
          },
          "path": {
            "description": "Access path of menu",
            "type": "string"
          },
          "properties": {
            "description": "Properties of menu (JSON)",
            "type": "string"
          },
          "resources": {
            "description": "Resources of menu",
            "items": {
              "$ref": "#/components/schemas/schema.MenuResource"
            },
            "type": "array"
          },
          "sequence": {
            "description": "Sequence for sorting (Order by desc)",
            "type": "integer"
          },
          "status": {
            "description": "Status of menu (enabled, disabled)",
            "type": "string"
          },
          "type": {
            "description": "Type of menu (page, button)",
            "type": "string"
          },
          "updated_at": {
            "description": "Update time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "schema.MenuForm": {
        "properties": {
          "code": {
            "description": "Code of menu (unique for each level)",
            "maxLength": 32,
            "type": "string"
          },
          "description": {
            "description": "Details about menu",
            "type": "string"
          },
          "name": {
            "description": "Display name of menu",
            "maxLength": 128,
            "type": "string"
          },
          "parent_id": {
            "description": "Parent ID (From Menu.ID)",
            "type": "string"
          },
          "path": {
            "description": "Access path of menu",
            "type": "string"
          },
          "properties": {
            "description": "Properties of menu (JSON)",
            "type": "string"
          },
          "resources": {
            "description": "Resources of menu",
            "items": {
              "$ref": "#/components/schemas/schema.MenuResource"
            },
            "type": "array"
          },
          "sequence": {
            "description": "Sequence for sorting (Order by desc)",
            "type": "integer"
          },
          "status": {
            "description": "Status of menu (enabled, disabled)",
            "enum": ["disabled", "enabled"],
            "type": "string"
          },
          "type": {
            "description": "Type of menu (page, button)",
            "enum": ["page", "button"],
            "type": "string"
          }
        },
        "required": ["code", "name", "status", "type"],
        "type": "object"
      },
      "schema.MenuResource": {
        "properties": {
          "created_at": {
            "description": "Create time",
            "type": "string"
          },
          "id": {
            "description": "Unique ID",
            "type": "string"
          },
          "menu_id": {
            "description": "From Menu.ID",
            "type": "string"
          },
          "method": {
            "description": "HTTP method",
            "type": "string"
          },
          "path": {
            "description": "API request path (e.g. /api/v1/users/:id)",
            "type": "string"
          },
          "updated_at": {
            "description": "Update time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "schema.Role": {
        "properties": {
          "code": {
            "description": "Code of role (unique)",
            "type": "string"
          },
          "created_at": {
            "description": "Create time",
            "type": "string"
          },
          "description": {
            "description": "Details about role",
            "type": "string"
          },
          "id": {
            "description": "Unique ID",
            "type": "string"
          },
          "menus": {
            "description": "Role menu list",
            "items": {
              "$ref": "#/components/schemas/schema.RoleMenu"
            },
            "type": "array"
          },
          "name": {
            "description": "Display name of role",
            "type": "string"
          },
          "sequence": {
            "description": "Sequence for sorting",
            "type": "integer"
          },
          "status": {
            "description": "Status of role (disabled, enabled)",
            "type": "string"
          },
          "updated_at": {
            "description": "Update time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "schema.RoleForm": {
        "properties": {
          "code": {
            "description": "Code of role (unique)",
            "maxLength": 32,
            "type": "string"
          },
          "description": {
            "description": "Details about role",
            "type": "string"
          },
          "menus": {
            "description": "Role menu list",
            "items": {
              "$ref": "#/components/schemas/schema.RoleMenu"
            },
            "type": "array"
          },
          "name": {
            "description": "Display name of role",
            "maxLength": 128,
            "type": "string"
          },
          "sequence": {
            "description": "Sequence for sorting",
            "type": "integer"
          },
          "status": {
            "description": "Status of role (enabled, disabled)",
            "enum": ["disabled", "enabled"],
            "type": "string"
          }
        },
        "required": ["code", "name", "status"],
        "type": "object"
      },
      "schema.RoleMenu": {
        "properties": {
          "created_at": {
            "description": "Create time",
            "type": "string"
          },
          "id": {
            "description": "Unique ID",
            "type": "string"
          },
          "menu_id": {
            "description": "From Menu.ID",
            "type": "string"
          },
          "role_id": {
            "description": "From Role.ID",
            "type": "string"
          },
          "updated_at": {
            "description": "Update time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "schema.UpdateCurrentUser": {
        "properties": {
          "email": {
            "description": "Email of user",
            "maxLength": 128,
            "type": "string"
          },
          "name": {
            "description": "Name of user",
            "maxLength": 64,
            "type": "string"
          },
          "phone": {
            "description": "Phone number of user",
            "maxLength": 32,
            "type": "string"
          },
          "remark": {
            "description": "Remark of user",
            "maxLength": 1024,
            "type": "string"
          }
        },
        "required": ["name"],
        "type": "object"
      },
      "schema.UpdateLoginPassword": {
        "properties": {
          "new_password": {
            "description": "New password (md5 hash)",
            "type": "string"
          },
          "old_password": {
            "description": "Old password (md5 hash)",
            "type": "string"
          }
        },
        "required": ["new_password", "old_password"],
        "type": "object"
      },
      "schema.User": {
        "properties": {
          "created_at": {
            "description": "Create time",
            "type": "string"
          },
          "email": {
            "description": "Email of user",
            "type": "string"
          },
          "id": {
            "description": "Unique ID",
            "type": "string"
          },
          "name": {
            "description": "Name of user",
            "type": "string"
          },
          "phone": {
            "description": "Phone number of user",
            "type": "string"
          },
          "remark": {
            "description": "Remark of user",
            "type": "string"
          },
          "roles": {
            "description": "Roles of user",
            "items": {
              "$ref": "#/components/schemas/schema.UserRole"
            },
            "type": "array"
          },
          "status": {
            "description": "Status of user (activated, freezed)",
            "type": "string"
          },
          "updated_at": {
            "description": "Update time",
            "type": "string"
          },
          "username": {
            "description": "Username for login",
            "type": "string"
          }
        },
        "type": "object"
      },
      "schema.UserForm": {
        "properties": {
          "email": {
            "description": "Email of user",
            "maxLength": 128,
            "type": "string"
          },
          "name": {
            "description": "Name of user",
            "maxLength": 64,
            "type": "string"
          },
          "password": {
            "description": "Password for login (md5 hash)",
            "maxLength": 64,
            "type": "string"
          },
          "phone": {
            "description": "Phone number of user",
            "maxLength": 32,
            "type": "string"
          },
          "remark": {
            "description": "Remark of user",
            "maxLength": 1024,
            "type": "string"
          },
          "roles": {
            "description": "Roles of user",
            "items": {
              "$ref": "#/components/schemas/schema.UserRole"
            },
            "type": "array"
          },
          "status": {
            "description": "Status of user (activated, freezed)",
            "enum": ["activated", "freezed"],
            "type": "string"
          },
          "username": {
            "description": "Username for login",
            "maxLength": 64,
            "type": "string"
          }
        },
        "required": ["name", "roles", "status", "username"],
        "type": "object"
      },
      "schema.UserRole": {
        "properties": {
          "created_at": {
            "description": "Create time",
            "type": "string"
          },
          "id": {
            "description": "Unique ID",
            "type": "string"
          },
          "role_id": {
            "description": "From Role.ID",
            "type": "string"
          },
          "role_name": {
            "description": "From Role.Name",
            "type": "string"
          },
          "updated_at": {
            "description": "Update time",
            "type": "string"
          },
          "user_id": {
            "description": "From User.ID",
            "type": "string"
          }
        },
        "type": "object"
      },
      "util.ResponseResult": {
        "properties": {
          "data": {
            "type": "object"
          },
          "error": {
            "$ref": "#/components/schemas/errors.Error"
          },
          "success": {
            "type": "boolean"
          },
          "total": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "_api_v1_captcha_id_get_200_response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/util.ResponseResult"
          },
          {
            "properties": {
              "data": {
                "$ref": "#/components/schemas/schema.Captcha"
              }
            },
            "type": "object"
          }
        ]
      },
      "_api_v1_current_menus_get_200_response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/util.ResponseResult"
          },
          {
            "properties": {
              "data": {
                "items": {
                  "$ref": "#/components/schemas/schema.Menu"
                },
                "type": "array"
              }
            },
            "type": "object"
          }
        ]
      },
      "_api_v1_current_refresh_token_post_200_response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/util.ResponseResult"
          },
          {
            "properties": {
              "data": {
                "$ref": "#/components/schemas/schema.LoginToken"
              }
            },
            "type": "object"
          }
        ]
      },
      "_api_v1_current_user_get_200_response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/util.ResponseResult"
          },
          {
            "properties": {
              "data": {
                "$ref": "#/components/schemas/schema.User"
              }
            },
            "type": "object"
          }
        ]
      },
      "_api_v1_loggers_get_200_response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/util.ResponseResult"
          },
          {
            "properties": {
              "data": {
                "items": {
                  "$ref": "#/components/schemas/schema.Logger"
                },
                "type": "array"
              }
            },
            "type": "object"
          }
        ]
      },
      "_api_v1_menus_post_200_response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/util.ResponseResult"
          },
          {
            "properties": {
              "data": {
                "$ref": "#/components/schemas/schema.Menu"
              }
            },
            "type": "object"
          }
        ]
      },
      "_api_v1_roles_get_200_response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/util.ResponseResult"
          },
          {
            "properties": {
              "data": {
                "items": {
                  "$ref": "#/components/schemas/schema.Role"
                },
                "type": "array"
              }
            },
            "type": "object"
          }
        ]
      },
      "_api_v1_roles_post_200_response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/util.ResponseResult"
          },
          {
            "properties": {
              "data": {
                "$ref": "#/components/schemas/schema.Role"
              }
            },
            "type": "object"
          }
        ]
      },
      "_api_v1_users_get_200_response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/util.ResponseResult"
          },
          {
            "properties": {
              "data": {
                "items": {
                  "$ref": "#/components/schemas/schema.User"
                },
                "type": "array"
              }
            },
            "type": "object"
          }
        ]
      }
    },
    "securitySchemes": {
      "ApiKeyAuth": {
        "in": "header",
        "name": "Authorization",
        "type": "apiKey"
      }
    }
  },
  "x-original-swagger-version": "2.0"
}
